
skip_docs

require './Constants/Constants'

require './Managers/TestManager'
require './Managers/CodeSigningManager'

test_manager = TestManager.new(
  fastlane: self
)

code_signing_manager = CodeSigningManager.new(
  fastlane: self,
  keychain_name: Constants.KEYCHAIN_NAME,
  keychain_password: Constants.DEFAULT_KEYCHAIN_PASSWORD,
  bundle_id_staging: Constants.BUNDLE_ID_STAGING,
  bundle_id_uat: Constants.BUNDLE_ID_UAT,
  bundle_id_production: Constants.BUNDLE_ID_PRODUCTION,
  dev_portal_apple_id: Constants.DEV_PORTAL_APPLE_ID,
  dev_portal_team_id: Constants.DEV_PORTAL_TEAM_ID
)

default_platform(:ios)

platform :ios do
  ### Testing ###

  desc 'build for testing'
  lane :build_for_testing do
    test_manager.build(scheme: Constants.SCHEME_NAME_TEST_SUITE)
  end

  desc 'run unit tests'
  lane :unit_tests do
    test_manager.test(scheme: Constants.SCHEME_NAME_UNIT_TESTS)
  end

  desc 'run ui tests'
  lane :ui_tests do
    test_manager.test(scheme: Constants.SCHEME_NAME_UI_TESTS)
  end

  ### Code Sign ###

  desc 'create or update certificate and provisioning profile'
  lane :code_signing do |options|
    code_signing_manager.sync_code_sign(
      update_adhoc: options.fetch(:update_adhoc, false),
      update_development: options.fetch(:update_development, false),
      update_appstore: options.fetch(:update_appstore, false)
    )
  end

  ### Utilities ###

  desc 'clean up derived data'
  lane :clean_up do
    clear_derived_data(derived_data_path: Constants.DERIVED_DATA_PATH)
  end

end
